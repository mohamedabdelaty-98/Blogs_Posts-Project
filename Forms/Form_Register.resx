<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picture_box.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>